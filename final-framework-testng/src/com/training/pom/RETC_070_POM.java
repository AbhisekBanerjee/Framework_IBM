package com.training.pom;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class RETC_070_POM 
{

private WebDriver driver; 
	
	public RETC_070_POM(WebDriver driver) {
		this.driver = driver; 
		PageFactory.initElements(driver, this);
	}
	// login pom
	@FindBy(id="user_login")
	private WebElement Username; 
	@FindBy(id="user_pass")
	private WebElement Password;
	@FindBy(name="login")
	private WebElement SignInBtn; 
	
	public void sendUsername(String username) {
		this.Username.clear();
		this.Username.sendKeys(username);
	}
	
	public void sendPassword(String password) {
		this.Password.clear(); 
		this.Password.sendKeys(password); 
	}
	
	public void clickSignInBtn() {
		this.SignInBtn.click(); 
	}
	
	//RETC70 pom 
	
	@FindBy(linkText="Properties")
	private WebElement Propertieslink;
	public void clickOnPropertiesLink() {
		this.Propertieslink.click();
	}
	
	@FindBy(linkText="Features")
	private WebElement FeaturesLink;
	public void clickOnFeaturesLink() {
		this.FeaturesLink.click();
	}
	
	@FindBy(id="tag-name")
	private WebElement FeatureName;
	public void enterFeatureName(String fname) {
		this.FeatureName.clear();
		this.FeatureName.sendKeys(fname);
	}
	
	@FindBy(id="tag-slug")
	private WebElement FeatureSlug;
	public void enterFeatureSlug(String fslug) {
		this.FeatureSlug.clear();
		this.FeatureSlug.sendKeys(fslug);
	}
	
	@FindBy(id="tag-description")
	private WebElement FeatureDescp;
	public void enterFeatureDescription(String fdescrp) {
		this.FeatureDescp.clear();
		this.FeatureDescp.sendKeys(fdescrp);
	}
	
	@FindBy(id="submit")
	private WebElement AddNewFeatureBtn;
	public void clickOnAddNewFeatureBtn() {
		this.AddNewFeatureBtn.click();
		this.driver.navigate().refresh(); //Refresh for update
	}
	
	@FindBy(xpath="//*[@id=\"menu-posts-property\"]/ul/li[3]/a")
	private WebElement AddNewLink;  //Add New link in Properties section
	public void clickOnAddNewLink() {
		this.AddNewLink.click();
	}
	
	@FindBy(id="title-prompt-text")
	private WebElement PropertyTitleBox;
	public void enterPropertyTitle(String pTitle) throws InterruptedException {
		Thread.sleep(2000);
	//	this.PropertyTitleBox.clear();
	//	this.PropertyTitleBox.sendKeys(pTitle);
		Actions actions1 = new Actions(driver);
		actions1.moveToElement(PropertyTitleBox);
		actions1.click();
		actions1.sendKeys(pTitle);
		actions1.build().perform();
		Thread.sleep(2000);
	}
	
	@FindBy(id="content_ifr")
	private WebElement PropertyContentBox;              
	public void enterPropertyContent(String pContent) {
		/**this.driver.switchTo().frame(PropertyContentBox);
		this.PropertyContentBox.clear();
		this.PropertyContentBox.sendKeys(pContent);
		**/
		Actions actions2 = new Actions(driver);
		actions2.moveToElement(PropertyContentBox);
		actions2.click();
		actions2.sendKeys(pContent);
		actions2.build().perform();
	}
	
	@FindBy(xpath="//div[@id='publishing-action']/input[@type='submit']")
	private WebElement PropertyPublishBtn;
	public void clickPropertyPublishBtn() {
		this.PropertyPublishBtn.click();
		this.driver.navigate().refresh(); //Refresh for update
	}
	
	// update the contains text '....'
	@FindBy(xpath="//ul[@id='property_featurechecklist']/li[contains(@id,'property_feature')]/label[contains(text(),'kopy')]/input[@type='checkbox']")
	private WebElement CheckBox;
	public void clickCheckBox() {
		this.CheckBox.click();
	}
	
	@FindBy(xpath="//div[@id='publishing-action']/input[@type='submit']")
	private WebElement FeaturePublishBtn;
	public void clickFeaturePublishBtn() {
		this.FeaturePublishBtn.click();
	}
	
	@FindBy(xpath="//*[@id=\"wp-admin-bar-my-account\"]/a")
	private WebElement HowdyAdminLink;
	public void mouseOverHowdyAdmin() {
		Actions action = new Actions(this.driver);
		action.moveToElement(HowdyAdminLink).build().perform();
	}
	
	@FindBy(linkText="Log Out")
	private WebElement LogOutLink;
	public void clickOnLogOut() {
		this.LogOutLink.click();
	}
	
	@FindBy(linkText="Real Estate")
	private WebElement RealEstateLink;
	public void clickOnRealEstate() {
		this.RealEstateLink.click();
	}
	
	@FindBy(xpath="//div[@class='proinput']/form/input[@title='Search input']")
	private WebElement SearchBox;
	public void enterPropertynameInSearchBox(String searchname) {
		this.SearchBox.sendKeys(searchname);
	}
	
	@FindBy(xpath="//div[@class='item asl_result_pagepost fx-none']")
	private WebElement AutoGeneratedPOPUP;
	public boolean CheckForSearchedNamePresent() {
		return this.AutoGeneratedPOPUP.isEnabled();
	}
	
}
